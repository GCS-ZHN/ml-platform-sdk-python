# self define e.g text_classfication
TaskName: "pytorch-vepfs-test"
# description for this task
Description: "demo task"
# entry point command
# Entrypoint: "cd /root/code/ml_benchmark/ConvNets && pip install -r ./requirements.txt && pip install --extra-index-url https://developer.download.nvidia.com/compute/redist --upgrade nvidia-dali-cuda110 && python3 ./multiproc.py --nproc_per_node 8 ./launch.py --model resnet50 --precision AMP --mode benchmark_training --platform DGX1V /vepfsdata/imgnet/ILSVRC2012/train --raport-file benchmark.json --epochs 400 --print-freq 100 --training-only"
Entrypoint: "cd /root/code/ml_benchmark/ConvNets && pip install -r ./requirements.txt && cd /vepfsdata/pkg/dllogger && pip install . && pip install /vepfsdata/pkg/nvidia_dali_cuda110-1.6.0-2993096-py3-none-manylinux2014_x86_64.whl && cd /root/code/ml_benchmark/ConvNets && python3 ./multiproc.py --nproc_per_node 8 ./launch.py --model resnet50 --precision AMP --mode benchmark_training --platform DGX1V /vepfsdata/imgnet/ILSVRC2012/train --raport-file benchmark.json --epochs 400 --training-only"
Args: ""
Tags:
    - "demo"
    - "hello-word"
# the code path you want to upload locally
UserCodePath: ""
# remote path mount in training container
RemoteMountCodePath: ""
# user define env var
Envs:
    - Name: "VOLC_AML_TEST_KEY_1"
      Value: "v1"
    - Name: "VOLC_AML_TEST_KEY_2"
      Value: "v2"
Image: "ml_platform/pytorch:1.7"
# group define in /ml-platform/resourceGroup, empty as default group
ResourceGroupID: "r-20220316181239-h8zhh"
# distributed framework, support: TensorFlow PS,PyTorch DDP,Horovod,BytePS
Framework: "PyTorchDDP"
TaskRoleSpecs:
    - RoleName: "worker"
      RoleReplicas: 1 
      Flavor: "ml.hpcg1v.21xlarge"
ActiveDeadlineSeconds: 432000
# enable tensor board or not
EnableTensorBoard: false
Storages:
    - Type: "Vepfs"
      MountPath: "/vepfsdata"

